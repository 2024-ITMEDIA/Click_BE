name: Deploy to AWS EC2

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2  # 리전은 EC2 인스턴스에 맞게 설정
      
      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_BASE64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa


      - name: Deploy to EC2
        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/ubuntu/Click_BE
            git pull origin main
            
            # Comment out admin URL and admin app
            sed -i 's/path("admin/", admin.site.urls)/#path("admin/", admin.site.urls)/' ./project_folder/urls.py
            sed -i 's/"django.contrib.admin",/#"django.contrib.admin",/' ./project_folder/settings.py

            source venv/bin/activate
            pip install -r requirements.txt
            
            # Run migrations without admin
            python manage.py makemigrations
            python manage.py migrate
            
            # Uncomment admin URL and admin app
            sed -i 's/#path("admin/", admin.site.urls)/path("admin/", admin.site.urls)/' ./project_folder/urls.py
            sed -i 's/#"django.contrib.admin",/"django.contrib.admin",/' ./project_folder/settings.py

            # Run migrations again with admin
            python manage.py migrate

            # Collect static files and restart the application
            python manage.py collectstatic --noinput
            uwsgi --ini uwsgi.ini
            sudo systemctl restart nginx
          EOF
